scalar Date
scalar JSON

input FilterInput {
  field: String!
  operator: FilterOperator!
  value: String!
}

enum FilterOperator {
  EQUALS
  LIKE
  NOT_EQUALS
  GREATER_THAN
  LESS_THAN
  IN
}

type DynamicRemito {
  data: JSON!
}

type DynamicRemitosResponse {
  remitos: [DynamicRemito]!
  columns: [String!]!
  pagination: PaginationInfo!
}

type Company {
  CPY_0: String!
  CPYNAM_0: String!
}

type Facility {
  FCY_0: String!
  FCYSHO_0: String!
}

type Remito {
  CPY_0: String!
  DLVDAT_0: Date!
  STOFCY_0: String!
  SDHNUM_0: String!
  BPCORD_0: String!
  BPDNAM_0: String!
  XX6FLSIGN_0: Int!
}

type PaginationInfo {
  currentPage: Int!
  pageSize: Int!
  totalCount: Int!
  totalPages: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type RemitosResponse {
  remitos: [Remito]!
  pagination: PaginationInfo!
}

type UrlResponse {
  url: String!
}

type Mutation {
  subirPdfBase64(pdfBase64: String!): UrlResponse!
}

type Query {
  companies(search: String): [Company!]!
  facilities(legcpy: String): [Facility!]!
  remitosDynamic(cpy: String!, stofcy: String!, filters: [FilterInput!], desde: String, page: Int = 1, pageSize: Int = 50): DynamicRemitosResponse!
  testDB: [Company!]!
}